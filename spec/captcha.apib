FORMAT: 1A
HOST: https://tools.wmflabs.org/captcha/api/

# Labs Captcha API
Reinventing the wheel to comply with the Labs Terms of Use.

## Authentication
```http
Authorization: b0ea5efcf8c3451aba0b3a38a0acdd08
```
**Note: This API key is an example, and will not work.**
*If you need an API key for your tool, please ask tom29739.*

# Endpoints

## Authentication tester [/]

### Hello! [GET]
Returns Hello to test the authentication.

+ Response 200 (text/plain)

    + Body
    
              Hello!
    

## Captcha management [/captcha/{uuid}]
### Generate captcha [GET]
Generate a captcha that can be verified with the verify endpoint.
+ Response 200 (application/json)

    + Body
    
            {
                "uuid": "6c53954a-314c-42c5-a926-249fe6c94781",
                "image": "1236b96e80c21ad64ce53d9d37fccfa31734d8007cafec44dace76c24585b11dd76c8bacbab2c9af50adaa1974b57034"
            }
            
    + Schema
    
            {
                "$schema": "http://json-schema.org/draft-04/schema#",
                "type": "object",
                "properties": {
                    "image": {
                        "type": "string",
                        "description": "Unique identifier for captcha contents to verify input later."
                    },
                    "uuid": {
                        "type": "string",
                        "description": "Base64 encoded image of the captcha corresponding to the UUID also in the response."
                    }
                }
            }

+ Response 500 (application/json)

    + Body
    
            {
                "code": 929,
                "message": "Unable to generate captcha."
            }
            
    + Schema
    
            {
                "$schema": "http://json-schema.org/draft-04/schema#",
                "type": "object",
                "properties": {
                    "code": {
                        "type": "number",
                        "description": "Error code."
                    },
                    "message": {
                        "type": "string",
                        "description": "A short message describing the error."
                    }
                }
            }

### Verify captcha [POST]
Verify user input using a UUID from the generate endpoint.
+ Parameters
    + uuid (required)

        UUID for captcha you want to verify. This is deleted from the system when it is verified.

+ Response 200 (application/json)

    + Body
    
            { "match": true }
    
    + Schema
    
            {
                "$schema": "http://json-schema.org/draft-04/schema#",
                "type": "object",
                "properties": {
                    "match": {
                        "type": "boolean",
                        "description": "Boolean for captcha id and input comparison."
                    }
                }
            }

+ Response 500 (application/json)

    + Body
    
            {
                "code": 172,
                "message": "The verify UUID is invalid or does not exist."
            }
            
    + Schema
    
            {
                "$schema": "http://json-schema.org/draft-04/schema#",
                "type": "object",
                "properties": {
                    "code": {
                        "type": "number",
                        "description": "Error code."
                    },
                    "message": {
                        "type": "string",
                        "description": "A short message describing the error."
                    }
                }
            }

## Version [/version]

### Git commit hash [GET]
Returns the hash of the Git commit that the server is running on.

+ Response 200 (application/json)

    + Body
    
              { "hash": "7fa4c4d1af505096ec206211a9e4742550fb864e" }
    
    + Schema
    
            {
                "$schema": "http://json-schema.org/draft-04/schema#",
                "type": "object",
                "properties": {
                    "hash": {
                        "type": "string",
                        "description": "Git commit hash that the server is running on."
                    }
                }
            }

+ Response 500 (application/json)

    + Body
    
            {
                "code": 814,
                "message": "Unable to run command to find current Git commit hash."
            }
            
    + Schema
    
            {
                "$schema": "http://json-schema.org/draft-04/schema#",
                "type": "object",
                "properties": {
                    "code": {
                        "type": "number",
                        "description": "Error code."
                    },
                    "message": {
                        "type": "string",
                        "description": "A short message describing the error."
                    }
                }
            }
